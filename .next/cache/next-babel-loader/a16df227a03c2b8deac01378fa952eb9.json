{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Alan\\\\Documents\\\\GitHub\\\\Churrascometro\\\\pages\\\\index.js\";\nimport { useState } from 'react';\n\nfunction Barbecue() {\n  const {\n    0: adult,\n    1: setAdult\n  } = useState(0);\n  const {\n    0: adults,\n    1: setAdults\n  } = useState([adult]);\n  const {\n    0: kid,\n    1: setKid\n  } = useState(0);\n  const {\n    0: kids,\n    1: setKids\n  } = useState([kid]);\n  const {\n    0: duration,\n    1: setDuration\n  } = useState(0);\n  const {\n    0: durations,\n    1: setDurations\n  } = useState([duration]);\n  const {\n    0: resultado,\n    1: setResultado\n  } = useState();\n\n  function calculation() {\n    setAdults([adults]);\n    setKids([kids, kid]);\n    setDurations([durations, duration]); //pop, includes, shift\n\n    const inputAdults = adults.pop(adult);\n    const inputKids = kids.pop(kid);\n    const inputDurations = durations.pop(duration); //inputAdults\n    //inputKids\n    //inputDurations\n\n    const todalAmountOfMeat = meatPerPerson(inputDurations) * inputAdults + meatPerPerson(inputDurations) / 2 * inputKids;\n    const todalAmountOfBeer = beerPerPerson(inputDurations) * inputAdults;\n    const todalAmountOfDrink = drinkPerPerson(inputDurations) * inputAdults + meatPerPerson(inputDurations) / 2 * inputKids;\n\n    const screenDiv = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [todalAmountOfMeat / 1000, \"Kg de Meat\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [Math.ceil(todalAmountOfBeer / 355), \" Beer Cans\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [Math.ceil(todalAmountOfDrink / 2000), \" Drink Bottle\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 22\n    }, this);\n\n    console.log(inputAdults, inputKids, inputDurations);\n    return setResultado(screenDiv);\n  }\n\n  function limpeza() {}\n\n  function meatPerPerson(duration) {\n    if (duration >= 6) {\n      return 650;\n    } else {\n      return 400;\n    }\n  }\n\n  function beerPerPerson(duration) {\n    if (duration >= 6) {\n      return 2000;\n    } else {\n      return 1200;\n    }\n  }\n\n  function drinkPerPerson(duration) {\n    if (duration >= 6) {\n      return 1500;\n    } else {\n      return 1000;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"barbecue\",\n      children: \"Barbecue\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"inputGlobal\",\n      value: adult,\n      onChange: e => setAdult(e.target.value),\n      name: \"adults\",\n      type: \"number\",\n      placeholder: \"Adults\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"inputGlobal\",\n      value: kid,\n      onChange: e => setKid(e.target.value),\n      name: \"kids\",\n      type: \"number\",\n      placeholder: \"Kids\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"inputGlobal\",\n      value: duration,\n      onChange: e => setDuration(e.target.value),\n      name: \"duratio\",\n      type: \"number\",\n      placeholder: \"Duratio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"calculationGlobal\",\n      onClick: calculation,\n      onChange: limpeza,\n      children: \"Calculation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), resultado]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n\nexport default Barbecue;","map":{"version":3,"sources":["C:/Users/Alan/Documents/GitHub/Churrascometro/pages/index.js"],"names":["useState","Barbecue","adult","setAdult","adults","setAdults","kid","setKid","kids","setKids","duration","setDuration","durations","setDurations","resultado","setResultado","calculation","inputAdults","pop","inputKids","inputDurations","todalAmountOfMeat","meatPerPerson","todalAmountOfBeer","beerPerPerson","todalAmountOfDrink","drinkPerPerson","screenDiv","Math","ceil","console","log","limpeza","e","target","value"],"mappings":"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","sourcesContent":["import { useState } from 'react'\r\n\r\nfunction Barbecue(){\r\nconst [adult, setAdult] = useState(0)\r\nconst [adults, setAdults] = useState([adult])\r\n\r\nconst [kid, setKid] = useState(0)\r\nconst [kids, setKids] = useState([kid])\r\n\r\nconst [duration, setDuration] = useState(0)\r\nconst [durations, setDurations] = useState([duration])\r\n\r\nconst [resultado, setResultado] = useState()\r\n\r\nfunction calculation(){\r\n  setAdults([adults, ])\r\n  setKids([kids, kid])\r\n  setDurations([durations, duration])\r\n\r\n  \r\n//pop, includes, shift\r\n  const inputAdults = adults.pop(adult)\r\n  const inputKids = kids.pop(kid)\r\n  const inputDurations = durations.pop(duration)\r\n \r\n//inputAdults\r\n//inputKids\r\n//inputDurations\r\n\r\n  const todalAmountOfMeat = meatPerPerson(inputDurations) * inputAdults + (meatPerPerson(inputDurations) / 2 * inputKids)\r\n  const todalAmountOfBeer = beerPerPerson(inputDurations) * inputAdults\r\n  const todalAmountOfDrink = drinkPerPerson(inputDurations) * inputAdults + (meatPerPerson(inputDurations) / 2 * inputKids)\r\n\r\n  const screenDiv = (<div>\r\n    <p>{todalAmountOfMeat / 1000}Kg de Meat</p>\r\n    <p>{Math.ceil(todalAmountOfBeer / 355)} Beer Cans</p> \r\n    <p>{Math.ceil(todalAmountOfDrink / 2000)} Drink Bottle</p> \r\n  </div>)\r\nconsole.log(inputAdults, inputKids, inputDurations)\r\n\r\n  return (\r\n    setResultado(screenDiv)\r\n  )\r\n}\r\n\r\nfunction limpeza(){\r\n\r\n}\r\n\r\nfunction meatPerPerson(duration){\r\n  if(duration >= 6){\r\n    return 650\r\n  }else{\r\n    return 400\r\n  }\r\n}\r\n\r\nfunction beerPerPerson(duration){\r\n  if(duration >= 6){\r\n    return 2000\r\n  }else{\r\n    return 1200\r\n  }\r\n}\r\n\r\nfunction drinkPerPerson(duration){\r\n  if(duration >= 6){\r\n    return 1500\r\n  }else{\r\n    return 1000\r\n  }\r\n}\r\n\r\n\r\nreturn(\r\n    <div className='container'>\r\n        <h1 className='barbecue'>Barbecue</h1>\r\n        <input className='inputGlobal' value={adult} onChange={(e)=>setAdult(e.target.value)} name='adults' type='number' placeholder='Adults'  />\r\n        <input className='inputGlobal' value={kid} onChange={(e)=>setKid(e.target.value)} name='kids' type='number' placeholder='Kids'  />\r\n        <input className='inputGlobal' value={duration} onChange={(e)=>setDuration(e.target.value)} name='duratio' type='number' placeholder='Duratio'  />\r\n        <button className='calculationGlobal' onClick={calculation} onChange={limpeza}>Calculation</button>\r\n        {resultado}\r\n      </div>\r\n)\r\n}\r\n\r\nexport default Barbecue"]},"metadata":{},"sourceType":"module"}